============= renzol2.hw6 transcript [test] =============
  module: barline
    [import]: success  (1/1)
      [  input = len(Barline)  ]  your_output = 11  desired_output = 11  (2/2)
      [  input = 'STANDARD' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'DOTTED' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'DASHED' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'TICKED' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'SHORT' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'HEAVY' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'INTERIOR_DOUBLE' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'FINAL_DOUBLE' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'LEFT_REPEAT' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'RIGHT_REPEAT' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'MIDDLE_REPEAT' in Barline.__members__  ]  your_output = True  desired_output = True  (2/2)
  module: clef
    [import]: success  (1/1)
      [  input = len(Clef)  ]  your_output = 16  desired_output = 16  (2/2)
      [  input = 'TREBLE' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'SOPRANO' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'MEZZO_SOPRANO' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'ALTO' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'TENOR' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'BARITONE' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'BASS' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'TREBLE_8VA' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'BASS_8VA' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'TREBLE_15MA' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'BASS_15MA' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'TENOR_TREBLE' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'BARITONE_F' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'SUB_BASS' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'FRENCH_VIOLIN' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = 'PERCUSSION' in Clef.__members__  ]  your_output = True  desired_output = True  (2/2)
      [  input = Clef['TREBLE'].value  ]  your_output = (0, 2, 0)  desired_output = (0, 2, 0)  (2/2)
      [  input = Clef['SOPRANO'].value  ]  your_output = (1, 0, 0)  desired_output = (1, 0, 0)  (2/2)
      [  input = Clef['MEZZO_SOPRANO'].value  ]  your_output = (2, 2, 0)  desired_output = (2, 2, 0)  (2/2)
      [  input = Clef['ALTO'].value  ]  your_output = (3, 4, 0)  desired_output = (3, 4, 0)  (2/2)
      [  input = Clef['TENOR'].value  ]  your_output = (4, 6, 0)  desired_output = (4, 6, 0)  (2/2)
      [  input = Clef['BARITONE'].value  ]  your_output = (5, 8, 0)  desired_output = (5, 8, 0)  (2/2)
      [  input = Clef['BASS'].value  ]  your_output = (6, 6, 0)  desired_output = (6, 6, 0)  (2/2)
      [  input = Clef['TREBLE_8VA'].value  ]  your_output = (7, 2, 8)  desired_output = (7, 2, 8)  (2/2)
      [  input = Clef['BASS_8VA'].value  ]  your_output = (8, 6, -8)  desired_output = (8, 6, -8)  (2/2)
      [  input = Clef['TREBLE_15MA'].value  ]  your_output = (9, 2, 15)  desired_output = (9, 2, 15)  (2/2)
      [  input = Clef['BASS_15MA'].value  ]  your_output = (10, 6, -15)  desired_output = (10, 6, -15)  (2/2)
      [  input = Clef['TENOR_TREBLE'].value  ]  your_output = (11, 2, -8)  desired_output = (11, 2, -8)  (2/2)
      [  input = Clef['BARITONE_F'].value  ]  your_output = (12, 4, 0)  desired_output = (12, 4, 0)  (2/2)
      [  input = Clef['SUB_BASS'].value  ]  your_output = (13, 8, 0)  desired_output = (13, 8, 0)  (2/2)
      [  input = Clef['FRENCH_VIOLIN'].value  ]  your_output = (14, 0, 0)  desired_output = (14, 0, 0)  (2/2)
      [  input = Clef['PERCUSSION'].value  ]  your_output = (15, 4, 0)  desired_output = (15, 4, 0)  (2/2)
      [  input = Clef.TREBLE.linespace()  ]  your_output = 2  desired_output = 2  (2/2)
      [  input = Clef.TREBLE.transposition()  ]  your_output = 0  desired_output = 0  (2/2)
      [  input = Clef.BASS_8VA.linespace()  ]  your_output = 6  desired_output = 6  (2/2)
      [  input = Clef.BASS_8VA.transposition()  ]  your_output = -8  desired_output = -8  (2/2)
      [  input = Clef.TREBLE_15MA.linespace()  ]  your_output = 2  desired_output = 2  (2/2)
      [  input = Clef.TREBLE_15MA.transposition()  ]  your_output = 15  desired_output = 15  (2/2)
  module: mark
    [import]: success  (1/1)
      [  input = len(Mark)  ]  your_output = 28  desired_output = 28  (2/2)
      [  input = Mark['NIENTE']  ]  your_output = Mark.NIENTE  desired_output = Mark.NIENTE  (2/2)
      [  input = Mark['PPPP']  ]  your_output = Mark.PPPP  desired_output = Mark.PPPP  (2/2)
      [  input = Mark['PPP']  ]  your_output = Mark.PPP  desired_output = Mark.PPP  (2/2)
      [  input = Mark['PP']  ]  your_output = Mark.PP  desired_output = Mark.PP  (2/2)
      [  input = Mark['P']  ]  your_output = Mark.P  desired_output = Mark.P  (2/2)
      [  input = Mark['MP']  ]  your_output = Mark.MP  desired_output = Mark.MP  (2/2)
      [  input = Mark['MF']  ]  your_output = Mark.MF  desired_output = Mark.MF  (2/2)
      [  input = Mark['F']  ]  your_output = Mark.F  desired_output = Mark.F  (2/2)
      [  input = Mark['FF']  ]  your_output = Mark.FF  desired_output = Mark.FF  (2/2)
      [  input = Mark['FFF']  ]  your_output = Mark.FFF  desired_output = Mark.FFF  (2/2)
      [  input = Mark['FFFF']  ]  your_output = Mark.FFFF  desired_output = Mark.FFFF  (2/2)
      [  input = Mark['SFZ']  ]  your_output = Mark.SFZ  desired_output = Mark.SFZ  (2/2)
      [  input = Mark['CRESCENDO']  ]  your_output = Mark.CRESCENDO  desired_output = Mark.CRESCENDO  (2/2)
      [  input = Mark['CRESCENDO_END']  ]  your_output = Mark.CRESCENDO_END  desired_output = Mark.CRESCENDO_END  (2/2)
      [  input = Mark['DECRESCENDO']  ]  your_output = Mark.DECRESCENDO  desired_output = Mark.DECRESCENDO  (2/2)
      [  input = Mark['DECRESCENDO_END']  ]  your_output = Mark.DECRESCENDO_END  desired_output = Mark.DECRESCENDO_END  (2/2)
      [  input = Mark['TENUTO']  ]  your_output = Mark.TENUTO  desired_output = Mark.TENUTO  (2/2)
      [  input = Mark['DETATCHED']  ]  your_output = Mark.DETATCHED  desired_output = Mark.DETATCHED  (2/2)
      [  input = Mark['STACCATO']  ]  your_output = Mark.STACCATO  desired_output = Mark.STACCATO  (2/2)
      [  input = Mark['STACCATISSIMO']  ]  your_output = Mark.STACCATISSIMO  desired_output = Mark.STACCATISSIMO  (2/2)
      [  input = Mark['ACCENT']  ]  your_output = Mark.ACCENT  desired_output = Mark.ACCENT  (2/2)
      [  input = Mark['MARCATO']  ]  your_output = Mark.MARCATO  desired_output = Mark.MARCATO  (2/2)
      [  input = Mark['TRILL']  ]  your_output = Mark.TRILL  desired_output = Mark.TRILL  (2/2)
      [  input = Mark['MORDENT']  ]  your_output = Mark.MORDENT  desired_output = Mark.MORDENT  (2/2)
      [  input = Mark['TURN']  ]  your_output = Mark.TURN  desired_output = Mark.TURN  (2/2)
      [  input = Mark['FERMATA']  ]  your_output = Mark.FERMATA  desired_output = Mark.FERMATA  (2/2)
      [  input = Mark['ACCEL']  ]  your_output = Mark.ACCEL  desired_output = Mark.ACCEL  (2/2)
      [  input = Mark['DEACCEL']  ]  your_output = Mark.DEACCEL  desired_output = Mark.DEACCEL  (2/2)
      [  input = DYNAMIC == Mark['NIENTE'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['PPPP'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['PPP'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['PP'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['P'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['MP'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['MF'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['F'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['FF'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['FFF'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['FFFF'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['SFZ'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['CRESCENDO'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['CRESCENDO_END'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['DECRESCENDO'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = DYNAMIC == Mark['DECRESCENDO_END'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = ARTICULATION == Mark['TENUTO'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = ARTICULATION == Mark['DETATCHED'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = ARTICULATION == Mark['STACCATO'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = ARTICULATION == Mark['STACCATISSIMO'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = ARTICULATION == Mark['ACCENT'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = ARTICULATION == Mark['MARCATO'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = ORNAMENT == Mark['TRILL'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = ORNAMENT == Mark['MORDENT'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = ORNAMENT == Mark['TURN'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = TEMPORAL == Mark['FERMATA'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = TEMPORAL == Mark['ACCEL'].group()  ]  your_output = True  desired_output = True  (2/2)
      [  input = TEMPORAL == Mark['DEACCEL'].group()  ]  your_output = True  desired_output = True  (2/2)
  module: mode
    [import]: success  (1/1)
      [  input = len(Mode)  ]  your_output = 7  desired_output = 7  (2/2)
      [  input = Mode['MAJOR']  ]  your_output = Mode.MAJOR  desired_output = Mode.MAJOR  (2/2)
      [  input = Mode['DORIAN']  ]  your_output = Mode.DORIAN  desired_output = Mode.DORIAN  (2/2)
      [  input = Mode['PHRYGIAN']  ]  your_output = Mode.PHRYGIAN  desired_output = Mode.PHRYGIAN  (2/2)
      [  input = Mode['LYDIAN']  ]  your_output = Mode.LYDIAN  desired_output = Mode.LYDIAN  (2/2)
      [  input = Mode['MIXOLYDIAN']  ]  your_output = Mode.MIXOLYDIAN  desired_output = Mode.MIXOLYDIAN  (2/2)
      [  input = Mode['MINOR']  ]  your_output = Mode.MINOR  desired_output = Mode.MINOR  (2/2)
      [  input = Mode['LOCRIAN']  ]  your_output = Mode.LOCRIAN  desired_output = Mode.LOCRIAN  (2/2)
      [  input = Mode['IONIAN'] is Mode['MAJOR']  ]  your_output = True  desired_output = True  (2/2)
      [  input = Mode['AEOLIAN'] is Mode['MINOR']  ]  your_output = True  desired_output = True  (2/2)
      [  input = Mode.MAJOR.short_name()  ]  your_output = MAJ  desired_output = MAJ  (2/2)
      [  input = Mode.MAJOR.tonic_degree()  ]  your_output = 0  desired_output = 0  (2/2)
      [  input = Mode.AEOLIAN.short_name()  ]  your_output = MIN  desired_output = MIN  (2/2)
      [  input = Mode.AEOLIAN.tonic_degree()  ]  your_output = 5  desired_output = 5  (2/2)
      [  input = Mode.LOCRIAN.short_name()  ]  your_output = LOC  desired_output = LOC  (2/2)
      [  input = Mode.LOCRIAN.tonic_degree()  ]  your_output = 6  desired_output = 6  (2/2)
  module: meter
    [import]: success  (1/1)
      [  input = Meter(1, 2).measure_dur()  ]  your_output = <Ratio: 1/2>  desired_output = <Ratio: 1/2>  (2/2)
      [  input = Meter(2, 32).measure_dur()  ]  your_output = <Ratio: 1/16>  desired_output = <Ratio: 1/16>  (2/2)
      [  input = Meter(3, 2).measure_dur()  ]  your_output = <Ratio: 3/2>  desired_output = <Ratio: 3/2>  (2/2)
      [  input = Meter(4, 16).measure_dur()  ]  your_output = <Ratio: 1/4>  desired_output = <Ratio: 1/4>  (2/2)
      [  input = Meter(5, 8).measure_dur()  ]  your_output = <Ratio: 5/8>  desired_output = <Ratio: 5/8>  (2/2)
      [  input = Meter(6, 4).measure_dur()  ]  your_output = <Ratio: 3/2>  desired_output = <Ratio: 3/2>  (2/2)
      [  input = Meter(7, 8).measure_dur()  ]  your_output = <Ratio: 7/8>  desired_output = <Ratio: 7/8>  (2/2)
      [  input = Meter(8, 2).measure_dur()  ]  your_output = <Ratio: 4/1>  desired_output = <Ratio: 4/1>  (2/2)
      [  input = Meter(9, 4).measure_dur()  ]  your_output = <Ratio: 9/4>  desired_output = <Ratio: 9/4>  (2/2)
      [  input = Meter(10, 4).measure_dur()  ]  your_output = <Ratio: 5/2>  desired_output = <Ratio: 5/2>  (2/2)
      [  input = Meter(11, 16).measure_dur()  ]  your_output = <Ratio: 11/16>  desired_output = <Ratio: 11/16>  (2/2)
      [  input = Meter(12, 1).measure_dur()  ]  your_output = <Ratio: 12/1>  desired_output = <Ratio: 12/1>  (2/2)
      [  input = Meter(13, 2).measure_dur()  ]  your_output = <Ratio: 13/2>  desired_output = <Ratio: 13/2>  (2/2)
      [  input = Meter(14, 4).measure_dur()  ]  your_output = <Ratio: 7/2>  desired_output = <Ratio: 7/2>  (2/2)
      [  input = Meter(15, 32).measure_dur()  ]  your_output = <Ratio: 15/32>  desired_output = <Ratio: 15/32>  (2/2)
      [  input = Meter(16, 16).measure_dur()  ]  your_output = <Ratio: 1/1>  desired_output = <Ratio: 1/1>  (2/2)
      [  input = Meter(1, 2).beat()  ]  your_output = <Ratio: 1/2>  desired_output = <Ratio: 1/2>  (2/2)
      [  input = Meter(2, 32).beat()  ]  your_output = <Ratio: 1/32>  desired_output = <Ratio: 1/32>  (2/2)
      [  input = Meter(3, 2).beat()  ]  your_output = <Ratio: 1/2>  desired_output = <Ratio: 1/2>  (2/2)
      [  input = Meter(4, 16).beat()  ]  your_output = <Ratio: 1/16>  desired_output = <Ratio: 1/16>  (2/2)
      [  input = Meter(6, 4).beat()  ]  your_output = <Ratio: 3/4>  desired_output = <Ratio: 3/4>  (2/2)
      [  input = Meter(4, 8).beat()  ]  your_output = <Ratio: 1/8>  desired_output = <Ratio: 1/8>  (2/2)
      [  input = Meter(9, 4).beat()  ]  your_output = <Ratio: 3/4>  desired_output = <Ratio: 3/4>  (2/2)
      [  input = Meter(12, 1).beat()  ]  your_output = <Ratio: 3/1>  desired_output = <Ratio: 3/1>  (2/2)
      [  input = Meter(15, 32).beat()  ]  your_output = <Ratio: 3/32>  desired_output = <Ratio: 3/32>  (2/2)
      [  input = Meter(12, 1).beat()  ]  your_output = <Ratio: 3/1>  desired_output = <Ratio: 3/1>  (2/2)
      [  input = Meter(15, 32).is_compound()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(12, 4).is_compound()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(9, 16).is_compound()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(6, 2).is_compound()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(2, 32).is_simple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(1, 4).is_simple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(4, 16).is_simple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(3, 2).is_simple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(2, 32).is_duple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(2, 32).is_duple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(4, 16).is_duple()  ]  your_output = False  desired_output = False  (2/2)
      [  input = Meter(3, 2).is_duple()  ]  your_output = False  desired_output = False  (2/2)
      [  input = Meter(3, 32).is_triple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(3, 32).is_triple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(4, 16).is_triple()  ]  your_output = False  desired_output = False  (2/2)
      [  input = Meter(3, 2).is_triple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(2, 2).is_quadruple()  ]  your_output = False  desired_output = False  (2/2)
      [  input = Meter(7, 4).is_quadruple()  ]  your_output = False  desired_output = False  (2/2)
      [  input = Meter(4, 2).is_quadruple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(12, 1).is_quadruple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(5, 2).is_quintuple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(7, 4).is_quintuple()  ]  your_output = False  desired_output = False  (2/2)
      [  input = Meter(5, 2).is_quintuple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(5, 2).is_quintuple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(7, 32).is_septuple()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(11, 2).is_septuple()  ]  your_output = False  desired_output = False  (2/2)
      [  input = Meter(13, 8).is_septuple()  ]  your_output = False  desired_output = False  (2/2)
      [  input = Meter(15, 2).is_septuple()  ]  your_output = False  desired_output = False  (2/2)
      [  input = Meter(7, 32).is_complex()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(8, 8).is_complex()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(10, 2).is_complex()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(11, 8).is_complex()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(14, 2).is_complex()  ]  your_output = True  desired_output = True  (2/2)
      [  input = Meter(15, 2).is_complex()  ]  your_output = False  desired_output = False  (2/2)
      [  input = Meter(4, 4.0)  ]  your_output = $exception$  desired_output = $exception$  (2/2)
      [  input = Meter(4, 5)  ]  your_output = $exception$  desired_output = $exception$  (2/2)
      [  input = Meter(0, 4)  ]  your_output = $exception$  desired_output = $exception$  (2/2)
      [  input = Meter(5, 8).beat()  ]  your_output = $exception$  desired_output = $exception$  (2/2)
  module: key
    [import]: success  (1/1)
      [  input = Key(-7, 'Major')  ]  your_output = <Key: Cf-Major (7 flats)>  desired_output = <Key: Cf-Major (7 flats)>  (2/2)
      [  input = Key(-7, 'Minor')  ]  your_output = <Key: Af-Minor (7 flats)>  desired_output = <Key: Af-Minor (7 flats)>  (2/2)
      [  input = Key(-7, 'Ionian')  ]  your_output = <Key: Cf-Major (7 flats)>  desired_output = <Key: Cf-Major (7 flats)>  (2/2)
      [  input = Key(-7, 'Dorian')  ]  your_output = <Key: Df-Dorian (7 flats)>  desired_output = <Key: Df-Dorian (7 flats)>  (2/2)
      [  input = Key(-7, 'Phrygian')  ]  your_output = <Key: Ef-Phrygian (7 flats)>  desired_output = <Key: Ef-Phrygian (7 flats)>  (2/2)
      [  input = Key(-7, 'Lydian')  ]  your_output = <Key: Ff-Lydian (7 flats)>  desired_output = <Key: Ff-Lydian (7 flats)>  (2/2)
      [  input = Key(-7, 'Mixolydian')  ]  your_output = <Key: Gf-Mixolydian (7 flats)>  desired_output = <Key: Gf-Mixolydian (7 flats)>  (2/2)
      [  input = Key(-7, 'Aeolian')  ]  your_output = <Key: Af-Minor (7 flats)>  desired_output = <Key: Af-Minor (7 flats)>  (2/2)
      [  input = Key(-7, 'Locrian')  ]  your_output = <Key: Bf-Locrian (7 flats)>  desired_output = <Key: Bf-Locrian (7 flats)>  (2/2)
      [  input = Key(-6, 'Major')  ]  your_output = <Key: Gf-Major (6 flats)>  desired_output = <Key: Gf-Major (6 flats)>  (2/2)
      [  input = Key(-6, 'Minor')  ]  your_output = <Key: Ef-Minor (6 flats)>  desired_output = <Key: Ef-Minor (6 flats)>  (2/2)
      [  input = Key(-6, 'Ionian')  ]  your_output = <Key: Gf-Major (6 flats)>  desired_output = <Key: Gf-Major (6 flats)>  (2/2)
      [  input = Key(-6, 'Dorian')  ]  your_output = <Key: Af-Dorian (6 flats)>  desired_output = <Key: Af-Dorian (6 flats)>  (2/2)
      [  input = Key(-6, 'Phrygian')  ]  your_output = <Key: Bf-Phrygian (6 flats)>  desired_output = <Key: Bf-Phrygian (6 flats)>  (2/2)
      [  input = Key(-6, 'Lydian')  ]  your_output = <Key: Cf-Lydian (6 flats)>  desired_output = <Key: Cf-Lydian (6 flats)>  (2/2)
      [  input = Key(-6, 'Mixolydian')  ]  your_output = <Key: Df-Mixolydian (6 flats)>  desired_output = <Key: Df-Mixolydian (6 flats)>  (2/2)
      [  input = Key(-6, 'Aeolian')  ]  your_output = <Key: Ef-Minor (6 flats)>  desired_output = <Key: Ef-Minor (6 flats)>  (2/2)
      [  input = Key(-6, 'Locrian')  ]  your_output = <Key: F-Locrian (6 flats)>  desired_output = <Key: F-Locrian (6 flats)>  (2/2)
      [  input = Key(-5, 'Major')  ]  your_output = <Key: Df-Major (5 flats)>  desired_output = <Key: Df-Major (5 flats)>  (2/2)
      [  input = Key(-5, 'Minor')  ]  your_output = <Key: Bf-Minor (5 flats)>  desired_output = <Key: Bf-Minor (5 flats)>  (2/2)
      [  input = Key(-5, 'Ionian')  ]  your_output = <Key: Df-Major (5 flats)>  desired_output = <Key: Df-Major (5 flats)>  (2/2)
      [  input = Key(-5, 'Dorian')  ]  your_output = <Key: Ef-Dorian (5 flats)>  desired_output = <Key: Ef-Dorian (5 flats)>  (2/2)
      [  input = Key(-5, 'Phrygian')  ]  your_output = <Key: F-Phrygian (5 flats)>  desired_output = <Key: F-Phrygian (5 flats)>  (2/2)
      [  input = Key(-5, 'Lydian')  ]  your_output = <Key: Gf-Lydian (5 flats)>  desired_output = <Key: Gf-Lydian (5 flats)>  (2/2)
      [  input = Key(-5, 'Mixolydian')  ]  your_output = <Key: Af-Mixolydian (5 flats)>  desired_output = <Key: Af-Mixolydian (5 flats)>  (2/2)
      [  input = Key(-5, 'Aeolian')  ]  your_output = <Key: Bf-Minor (5 flats)>  desired_output = <Key: Bf-Minor (5 flats)>  (2/2)
      [  input = Key(-5, 'Locrian')  ]  your_output = <Key: C-Locrian (5 flats)>  desired_output = <Key: C-Locrian (5 flats)>  (2/2)
      [  input = Key(-4, 'Major')  ]  your_output = <Key: Af-Major (4 flats)>  desired_output = <Key: Af-Major (4 flats)>  (2/2)
      [  input = Key(-4, 'Minor')  ]  your_output = <Key: F-Minor (4 flats)>  desired_output = <Key: F-Minor (4 flats)>  (2/2)
      [  input = Key(-4, 'Ionian')  ]  your_output = <Key: Af-Major (4 flats)>  desired_output = <Key: Af-Major (4 flats)>  (2/2)
      [  input = Key(-4, 'Dorian')  ]  your_output = <Key: Bf-Dorian (4 flats)>  desired_output = <Key: Bf-Dorian (4 flats)>  (2/2)
      [  input = Key(-4, 'Phrygian')  ]  your_output = <Key: C-Phrygian (4 flats)>  desired_output = <Key: C-Phrygian (4 flats)>  (2/2)
      [  input = Key(-4, 'Lydian')  ]  your_output = <Key: Df-Lydian (4 flats)>  desired_output = <Key: Df-Lydian (4 flats)>  (2/2)
      [  input = Key(-4, 'Mixolydian')  ]  your_output = <Key: Ef-Mixolydian (4 flats)>  desired_output = <Key: Ef-Mixolydian (4 flats)>  (2/2)
      [  input = Key(-4, 'Aeolian')  ]  your_output = <Key: F-Minor (4 flats)>  desired_output = <Key: F-Minor (4 flats)>  (2/2)
      [  input = Key(-4, 'Locrian')  ]  your_output = <Key: G-Locrian (4 flats)>  desired_output = <Key: G-Locrian (4 flats)>  (2/2)
      [  input = Key(-3, 'Major')  ]  your_output = <Key: Ef-Major (3 flats)>  desired_output = <Key: Ef-Major (3 flats)>  (2/2)
      [  input = Key(-3, 'Minor')  ]  your_output = <Key: C-Minor (3 flats)>  desired_output = <Key: C-Minor (3 flats)>  (2/2)
      [  input = Key(-3, 'Ionian')  ]  your_output = <Key: Ef-Major (3 flats)>  desired_output = <Key: Ef-Major (3 flats)>  (2/2)
      [  input = Key(-3, 'Dorian')  ]  your_output = <Key: F-Dorian (3 flats)>  desired_output = <Key: F-Dorian (3 flats)>  (2/2)
      [  input = Key(-3, 'Phrygian')  ]  your_output = <Key: G-Phrygian (3 flats)>  desired_output = <Key: G-Phrygian (3 flats)>  (2/2)
      [  input = Key(-3, 'Lydian')  ]  your_output = <Key: Af-Lydian (3 flats)>  desired_output = <Key: Af-Lydian (3 flats)>  (2/2)
      [  input = Key(-3, 'Mixolydian')  ]  your_output = <Key: Bf-Mixolydian (3 flats)>  desired_output = <Key: Bf-Mixolydian (3 flats)>  (2/2)
      [  input = Key(-3, 'Aeolian')  ]  your_output = <Key: C-Minor (3 flats)>  desired_output = <Key: C-Minor (3 flats)>  (2/2)
      [  input = Key(-3, 'Locrian')  ]  your_output = <Key: D-Locrian (3 flats)>  desired_output = <Key: D-Locrian (3 flats)>  (2/2)
      [  input = Key(-2, 'Major')  ]  your_output = <Key: Bf-Major (2 flats)>  desired_output = <Key: Bf-Major (2 flats)>  (2/2)
      [  input = Key(-2, 'Minor')  ]  your_output = <Key: G-Minor (2 flats)>  desired_output = <Key: G-Minor (2 flats)>  (2/2)
      [  input = Key(-2, 'Ionian')  ]  your_output = <Key: Bf-Major (2 flats)>  desired_output = <Key: Bf-Major (2 flats)>  (2/2)
      [  input = Key(-2, 'Dorian')  ]  your_output = <Key: C-Dorian (2 flats)>  desired_output = <Key: C-Dorian (2 flats)>  (2/2)
      [  input = Key(-2, 'Phrygian')  ]  your_output = <Key: D-Phrygian (2 flats)>  desired_output = <Key: D-Phrygian (2 flats)>  (2/2)
      [  input = Key(-2, 'Lydian')  ]  your_output = <Key: Ef-Lydian (2 flats)>  desired_output = <Key: Ef-Lydian (2 flats)>  (2/2)
      [  input = Key(-2, 'Mixolydian')  ]  your_output = <Key: F-Mixolydian (2 flats)>  desired_output = <Key: F-Mixolydian (2 flats)>  (2/2)
      [  input = Key(-2, 'Aeolian')  ]  your_output = <Key: G-Minor (2 flats)>  desired_output = <Key: G-Minor (2 flats)>  (2/2)
      [  input = Key(-2, 'Locrian')  ]  your_output = <Key: A-Locrian (2 flats)>  desired_output = <Key: A-Locrian (2 flats)>  (2/2)
      [  input = Key(-1, 'Major')  ]  your_output = <Key: F-Major (1 flat)>  desired_output = <Key: F-Major (1 flat)>  (2/2)
      [  input = Key(-1, 'Minor')  ]  your_output = <Key: D-Minor (1 flat)>  desired_output = <Key: D-Minor (1 flat)>  (2/2)
      [  input = Key(-1, 'Ionian')  ]  your_output = <Key: F-Major (1 flat)>  desired_output = <Key: F-Major (1 flat)>  (2/2)
      [  input = Key(-1, 'Dorian')  ]  your_output = <Key: G-Dorian (1 flat)>  desired_output = <Key: G-Dorian (1 flat)>  (2/2)
      [  input = Key(-1, 'Phrygian')  ]  your_output = <Key: A-Phrygian (1 flat)>  desired_output = <Key: A-Phrygian (1 flat)>  (2/2)
      [  input = Key(-1, 'Lydian')  ]  your_output = <Key: Bf-Lydian (1 flat)>  desired_output = <Key: Bf-Lydian (1 flat)>  (2/2)
      [  input = Key(-1, 'Mixolydian')  ]  your_output = <Key: C-Mixolydian (1 flat)>  desired_output = <Key: C-Mixolydian (1 flat)>  (2/2)
      [  input = Key(-1, 'Aeolian')  ]  your_output = <Key: D-Minor (1 flat)>  desired_output = <Key: D-Minor (1 flat)>  (2/2)
      [  input = Key(-1, 'Locrian')  ]  your_output = <Key: E-Locrian (1 flat)>  desired_output = <Key: E-Locrian (1 flat)>  (2/2)
      [  input = Key(0, 'Major')  ]  your_output = <Key: C-Major (0 sharps or flats)>  desired_output = <Key: C-Major (0 sharps or flats)>  (2/2)
      [  input = Key(0, 'Minor')  ]  your_output = <Key: A-Minor (0 sharps or flats)>  desired_output = <Key: A-Minor (0 sharps or flats)>  (2/2)
      [  input = Key(0, 'Ionian')  ]  your_output = <Key: C-Major (0 sharps or flats)>  desired_output = <Key: C-Major (0 sharps or flats)>  (2/2)
      [  input = Key(0, 'Dorian')  ]  your_output = <Key: D-Dorian (0 sharps or flats)>  desired_output = <Key: D-Dorian (0 sharps or flats)>  (2/2)
      [  input = Key(0, 'Phrygian')  ]  your_output = <Key: E-Phrygian (0 sharps or flats)>  desired_output = <Key: E-Phrygian (0 sharps or flats)>  (2/2)
      [  input = Key(0, 'Lydian')  ]  your_output = <Key: F-Lydian (0 sharps or flats)>  desired_output = <Key: F-Lydian (0 sharps or flats)>  (2/2)
      [  input = Key(0, 'Mixolydian')  ]  your_output = <Key: G-Mixolydian (0 sharps or flats)>  desired_output = <Key: G-Mixolydian (0 sharps or flats)>  (2/2)
      [  input = Key(0, 'Aeolian')  ]  your_output = <Key: A-Minor (0 sharps or flats)>  desired_output = <Key: A-Minor (0 sharps or flats)>  (2/2)
      [  input = Key(0, 'Locrian')  ]  your_output = <Key: B-Locrian (0 sharps or flats)>  desired_output = <Key: B-Locrian (0 sharps or flats)>  (2/2)
      [  input = Key(1, 'Major')  ]  your_output = <Key: G-Major (1 sharp)>  desired_output = <Key: G-Major (1 sharp)>  (2/2)
      [  input = Key(1, 'Minor')  ]  your_output = <Key: E-Minor (1 sharp)>  desired_output = <Key: E-Minor (1 sharp)>  (2/2)
      [  input = Key(1, 'Ionian')  ]  your_output = <Key: G-Major (1 sharp)>  desired_output = <Key: G-Major (1 sharp)>  (2/2)
      [  input = Key(1, 'Dorian')  ]  your_output = <Key: A-Dorian (1 sharp)>  desired_output = <Key: A-Dorian (1 sharp)>  (2/2)
      [  input = Key(1, 'Phrygian')  ]  your_output = <Key: B-Phrygian (1 sharp)>  desired_output = <Key: B-Phrygian (1 sharp)>  (2/2)
      [  input = Key(1, 'Lydian')  ]  your_output = <Key: C-Lydian (1 sharp)>  desired_output = <Key: C-Lydian (1 sharp)>  (2/2)
      [  input = Key(1, 'Mixolydian')  ]  your_output = <Key: D-Mixolydian (1 sharp)>  desired_output = <Key: D-Mixolydian (1 sharp)>  (2/2)
      [  input = Key(1, 'Aeolian')  ]  your_output = <Key: E-Minor (1 sharp)>  desired_output = <Key: E-Minor (1 sharp)>  (2/2)
      [  input = Key(1, 'Locrian')  ]  your_output = <Key: Fs-Locrian (1 sharp)>  desired_output = <Key: Fs-Locrian (1 sharp)>  (2/2)
      [  input = Key(2, 'Major')  ]  your_output = <Key: D-Major (2 sharps)>  desired_output = <Key: D-Major (2 sharps)>  (2/2)
      [  input = Key(2, 'Minor')  ]  your_output = <Key: B-Minor (2 sharps)>  desired_output = <Key: B-Minor (2 sharps)>  (2/2)
      [  input = Key(2, 'Ionian')  ]  your_output = <Key: D-Major (2 sharps)>  desired_output = <Key: D-Major (2 sharps)>  (2/2)
      [  input = Key(2, 'Dorian')  ]  your_output = <Key: E-Dorian (2 sharps)>  desired_output = <Key: E-Dorian (2 sharps)>  (2/2)
      [  input = Key(2, 'Phrygian')  ]  your_output = <Key: Fs-Phrygian (2 sharps)>  desired_output = <Key: Fs-Phrygian (2 sharps)>  (2/2)
      [  input = Key(2, 'Lydian')  ]  your_output = <Key: G-Lydian (2 sharps)>  desired_output = <Key: G-Lydian (2 sharps)>  (2/2)
      [  input = Key(2, 'Mixolydian')  ]  your_output = <Key: A-Mixolydian (2 sharps)>  desired_output = <Key: A-Mixolydian (2 sharps)>  (2/2)
      [  input = Key(2, 'Aeolian')  ]  your_output = <Key: B-Minor (2 sharps)>  desired_output = <Key: B-Minor (2 sharps)>  (2/2)
      [  input = Key(2, 'Locrian')  ]  your_output = <Key: Cs-Locrian (2 sharps)>  desired_output = <Key: Cs-Locrian (2 sharps)>  (2/2)
      [  input = Key(3, 'Major')  ]  your_output = <Key: A-Major (3 sharps)>  desired_output = <Key: A-Major (3 sharps)>  (2/2)
      [  input = Key(3, 'Minor')  ]  your_output = <Key: Fs-Minor (3 sharps)>  desired_output = <Key: Fs-Minor (3 sharps)>  (2/2)
      [  input = Key(3, 'Ionian')  ]  your_output = <Key: A-Major (3 sharps)>  desired_output = <Key: A-Major (3 sharps)>  (2/2)
      [  input = Key(3, 'Dorian')  ]  your_output = <Key: B-Dorian (3 sharps)>  desired_output = <Key: B-Dorian (3 sharps)>  (2/2)
      [  input = Key(3, 'Phrygian')  ]  your_output = <Key: Cs-Phrygian (3 sharps)>  desired_output = <Key: Cs-Phrygian (3 sharps)>  (2/2)
      [  input = Key(3, 'Lydian')  ]  your_output = <Key: D-Lydian (3 sharps)>  desired_output = <Key: D-Lydian (3 sharps)>  (2/2)
      [  input = Key(3, 'Mixolydian')  ]  your_output = <Key: E-Mixolydian (3 sharps)>  desired_output = <Key: E-Mixolydian (3 sharps)>  (2/2)
      [  input = Key(3, 'Aeolian')  ]  your_output = <Key: Fs-Minor (3 sharps)>  desired_output = <Key: Fs-Minor (3 sharps)>  (2/2)
      [  input = Key(3, 'Locrian')  ]  your_output = <Key: Gs-Locrian (3 sharps)>  desired_output = <Key: Gs-Locrian (3 sharps)>  (2/2)
      [  input = Key(4, 'Major')  ]  your_output = <Key: E-Major (4 sharps)>  desired_output = <Key: E-Major (4 sharps)>  (2/2)
      [  input = Key(4, 'Minor')  ]  your_output = <Key: Cs-Minor (4 sharps)>  desired_output = <Key: Cs-Minor (4 sharps)>  (2/2)
      [  input = Key(4, 'Ionian')  ]  your_output = <Key: E-Major (4 sharps)>  desired_output = <Key: E-Major (4 sharps)>  (2/2)
      [  input = Key(4, 'Dorian')  ]  your_output = <Key: Fs-Dorian (4 sharps)>  desired_output = <Key: Fs-Dorian (4 sharps)>  (2/2)
      [  input = Key(4, 'Phrygian')  ]  your_output = <Key: Gs-Phrygian (4 sharps)>  desired_output = <Key: Gs-Phrygian (4 sharps)>  (2/2)
      [  input = Key(4, 'Lydian')  ]  your_output = <Key: A-Lydian (4 sharps)>  desired_output = <Key: A-Lydian (4 sharps)>  (2/2)
      [  input = Key(4, 'Mixolydian')  ]  your_output = <Key: B-Mixolydian (4 sharps)>  desired_output = <Key: B-Mixolydian (4 sharps)>  (2/2)
      [  input = Key(4, 'Aeolian')  ]  your_output = <Key: Cs-Minor (4 sharps)>  desired_output = <Key: Cs-Minor (4 sharps)>  (2/2)
      [  input = Key(4, 'Locrian')  ]  your_output = <Key: Ds-Locrian (4 sharps)>  desired_output = <Key: Ds-Locrian (4 sharps)>  (2/2)
      [  input = Key(5, 'Major')  ]  your_output = <Key: B-Major (5 sharps)>  desired_output = <Key: B-Major (5 sharps)>  (2/2)
      [  input = Key(5, 'Minor')  ]  your_output = <Key: Gs-Minor (5 sharps)>  desired_output = <Key: Gs-Minor (5 sharps)>  (2/2)
      [  input = Key(5, 'Ionian')  ]  your_output = <Key: B-Major (5 sharps)>  desired_output = <Key: B-Major (5 sharps)>  (2/2)
      [  input = Key(5, 'Dorian')  ]  your_output = <Key: Cs-Dorian (5 sharps)>  desired_output = <Key: Cs-Dorian (5 sharps)>  (2/2)
      [  input = Key(5, 'Phrygian')  ]  your_output = <Key: Ds-Phrygian (5 sharps)>  desired_output = <Key: Ds-Phrygian (5 sharps)>  (2/2)
      [  input = Key(5, 'Lydian')  ]  your_output = <Key: E-Lydian (5 sharps)>  desired_output = <Key: E-Lydian (5 sharps)>  (2/2)
      [  input = Key(5, 'Mixolydian')  ]  your_output = <Key: Fs-Mixolydian (5 sharps)>  desired_output = <Key: Fs-Mixolydian (5 sharps)>  (2/2)
      [  input = Key(5, 'Aeolian')  ]  your_output = <Key: Gs-Minor (5 sharps)>  desired_output = <Key: Gs-Minor (5 sharps)>  (2/2)
      [  input = Key(5, 'Locrian')  ]  your_output = <Key: As-Locrian (5 sharps)>  desired_output = <Key: As-Locrian (5 sharps)>  (2/2)
      [  input = Key(6, 'Major')  ]  your_output = <Key: Fs-Major (6 sharps)>  desired_output = <Key: Fs-Major (6 sharps)>  (2/2)
      [  input = Key(6, 'Minor')  ]  your_output = <Key: Ds-Minor (6 sharps)>  desired_output = <Key: Ds-Minor (6 sharps)>  (2/2)
      [  input = Key(6, 'Ionian')  ]  your_output = <Key: Fs-Major (6 sharps)>  desired_output = <Key: Fs-Major (6 sharps)>  (2/2)
      [  input = Key(6, 'Dorian')  ]  your_output = <Key: Gs-Dorian (6 sharps)>  desired_output = <Key: Gs-Dorian (6 sharps)>  (2/2)
      [  input = Key(6, 'Phrygian')  ]  your_output = <Key: As-Phrygian (6 sharps)>  desired_output = <Key: As-Phrygian (6 sharps)>  (2/2)
      [  input = Key(6, 'Lydian')  ]  your_output = <Key: B-Lydian (6 sharps)>  desired_output = <Key: B-Lydian (6 sharps)>  (2/2)
      [  input = Key(6, 'Mixolydian')  ]  your_output = <Key: Cs-Mixolydian (6 sharps)>  desired_output = <Key: Cs-Mixolydian (6 sharps)>  (2/2)
      [  input = Key(6, 'Aeolian')  ]  your_output = <Key: Ds-Minor (6 sharps)>  desired_output = <Key: Ds-Minor (6 sharps)>  (2/2)
      [  input = Key(6, 'Locrian')  ]  your_output = <Key: Es-Locrian (6 sharps)>  desired_output = <Key: Es-Locrian (6 sharps)>  (2/2)
      [  input = Key(7, 'Major')  ]  your_output = <Key: Cs-Major (7 sharps)>  desired_output = <Key: Cs-Major (7 sharps)>  (2/2)
      [  input = Key(7, 'Minor')  ]  your_output = <Key: As-Minor (7 sharps)>  desired_output = <Key: As-Minor (7 sharps)>  (2/2)
      [  input = Key(7, 'Ionian')  ]  your_output = <Key: Cs-Major (7 sharps)>  desired_output = <Key: Cs-Major (7 sharps)>  (2/2)
      [  input = Key(7, 'Dorian')  ]  your_output = <Key: Ds-Dorian (7 sharps)>  desired_output = <Key: Ds-Dorian (7 sharps)>  (2/2)
      [  input = Key(7, 'Phrygian')  ]  your_output = <Key: Es-Phrygian (7 sharps)>  desired_output = <Key: Es-Phrygian (7 sharps)>  (2/2)
      [  input = Key(7, 'Lydian')  ]  your_output = <Key: Fs-Lydian (7 sharps)>  desired_output = <Key: Fs-Lydian (7 sharps)>  (2/2)
      [  input = Key(7, 'Mixolydian')  ]  your_output = <Key: Gs-Mixolydian (7 sharps)>  desired_output = <Key: Gs-Mixolydian (7 sharps)>  (2/2)
      [  input = Key(7, 'Aeolian')  ]  your_output = <Key: As-Minor (7 sharps)>  desired_output = <Key: As-Minor (7 sharps)>  (2/2)
      [  input = Key(7, 'Locrian')  ]  your_output = <Key: Bs-Locrian (7 sharps)>  desired_output = <Key: Bs-Locrian (7 sharps)>  (2/2)
      [  input = Key(-7, 'Major').tonic().name  ]  your_output = Cf  desired_output = Cf  (2/2)
      [  input = Key(-7, 'Minor').tonic().name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-7, 'Ionian').tonic().name  ]  your_output = Cf  desired_output = Cf  (2/2)
      [  input = Key(-7, 'Dorian').tonic().name  ]  your_output = Df  desired_output = Df  (2/2)
      [  input = Key(-7, 'Phrygian').tonic().name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-7, 'Lydian').tonic().name  ]  your_output = Ff  desired_output = Ff  (2/2)
      [  input = Key(-7, 'Mixolydian').tonic().name  ]  your_output = Gf  desired_output = Gf  (2/2)
      [  input = Key(-7, 'Aeolian').tonic().name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-7, 'Locrian').tonic().name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-6, 'Major').tonic().name  ]  your_output = Gf  desired_output = Gf  (2/2)
      [  input = Key(-6, 'Minor').tonic().name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-6, 'Ionian').tonic().name  ]  your_output = Gf  desired_output = Gf  (2/2)
      [  input = Key(-6, 'Dorian').tonic().name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-6, 'Phrygian').tonic().name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-6, 'Lydian').tonic().name  ]  your_output = Cf  desired_output = Cf  (2/2)
      [  input = Key(-6, 'Mixolydian').tonic().name  ]  your_output = Df  desired_output = Df  (2/2)
      [  input = Key(-6, 'Aeolian').tonic().name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-6, 'Locrian').tonic().name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-5, 'Major').tonic().name  ]  your_output = Df  desired_output = Df  (2/2)
      [  input = Key(-5, 'Minor').tonic().name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-5, 'Ionian').tonic().name  ]  your_output = Df  desired_output = Df  (2/2)
      [  input = Key(-5, 'Dorian').tonic().name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-5, 'Phrygian').tonic().name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-5, 'Lydian').tonic().name  ]  your_output = Gf  desired_output = Gf  (2/2)
      [  input = Key(-5, 'Mixolydian').tonic().name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-5, 'Aeolian').tonic().name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-5, 'Locrian').tonic().name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-4, 'Major').tonic().name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-4, 'Minor').tonic().name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-4, 'Ionian').tonic().name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-4, 'Dorian').tonic().name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-4, 'Phrygian').tonic().name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-4, 'Lydian').tonic().name  ]  your_output = Df  desired_output = Df  (2/2)
      [  input = Key(-4, 'Mixolydian').tonic().name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-4, 'Aeolian').tonic().name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-4, 'Locrian').tonic().name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(-3, 'Major').tonic().name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-3, 'Minor').tonic().name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-3, 'Ionian').tonic().name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-3, 'Dorian').tonic().name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-3, 'Phrygian').tonic().name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(-3, 'Lydian').tonic().name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-3, 'Mixolydian').tonic().name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-3, 'Aeolian').tonic().name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-3, 'Locrian').tonic().name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(-2, 'Major').tonic().name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-2, 'Minor').tonic().name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(-2, 'Ionian').tonic().name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-2, 'Dorian').tonic().name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-2, 'Phrygian').tonic().name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(-2, 'Lydian').tonic().name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-2, 'Mixolydian').tonic().name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-2, 'Aeolian').tonic().name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(-2, 'Locrian').tonic().name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(-1, 'Major').tonic().name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-1, 'Minor').tonic().name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(-1, 'Ionian').tonic().name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-1, 'Dorian').tonic().name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(-1, 'Phrygian').tonic().name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(-1, 'Lydian').tonic().name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-1, 'Mixolydian').tonic().name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-1, 'Aeolian').tonic().name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(-1, 'Locrian').tonic().name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(0, 'Major').tonic().name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(0, 'Minor').tonic().name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(0, 'Ionian').tonic().name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(0, 'Dorian').tonic().name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(0, 'Phrygian').tonic().name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(0, 'Lydian').tonic().name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(0, 'Mixolydian').tonic().name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(0, 'Aeolian').tonic().name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(0, 'Locrian').tonic().name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(1, 'Major').tonic().name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(1, 'Minor').tonic().name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(1, 'Ionian').tonic().name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(1, 'Dorian').tonic().name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(1, 'Phrygian').tonic().name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(1, 'Lydian').tonic().name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(1, 'Mixolydian').tonic().name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(1, 'Aeolian').tonic().name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(1, 'Locrian').tonic().name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(2, 'Major').tonic().name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(2, 'Minor').tonic().name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(2, 'Ionian').tonic().name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(2, 'Dorian').tonic().name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(2, 'Phrygian').tonic().name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(2, 'Lydian').tonic().name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(2, 'Mixolydian').tonic().name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(2, 'Aeolian').tonic().name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(2, 'Locrian').tonic().name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(3, 'Major').tonic().name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(3, 'Minor').tonic().name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(3, 'Ionian').tonic().name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(3, 'Dorian').tonic().name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(3, 'Phrygian').tonic().name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(3, 'Lydian').tonic().name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(3, 'Mixolydian').tonic().name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(3, 'Aeolian').tonic().name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(3, 'Locrian').tonic().name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(4, 'Major').tonic().name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(4, 'Minor').tonic().name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(4, 'Ionian').tonic().name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(4, 'Dorian').tonic().name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(4, 'Phrygian').tonic().name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(4, 'Lydian').tonic().name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(4, 'Mixolydian').tonic().name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(4, 'Aeolian').tonic().name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(4, 'Locrian').tonic().name  ]  your_output = Ds  desired_output = Ds  (2/2)
      [  input = Key(5, 'Major').tonic().name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(5, 'Minor').tonic().name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(5, 'Ionian').tonic().name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(5, 'Dorian').tonic().name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(5, 'Phrygian').tonic().name  ]  your_output = Ds  desired_output = Ds  (2/2)
      [  input = Key(5, 'Lydian').tonic().name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(5, 'Mixolydian').tonic().name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(5, 'Aeolian').tonic().name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(5, 'Locrian').tonic().name  ]  your_output = As  desired_output = As  (2/2)
      [  input = Key(6, 'Major').tonic().name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(6, 'Minor').tonic().name  ]  your_output = Ds  desired_output = Ds  (2/2)
      [  input = Key(6, 'Ionian').tonic().name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(6, 'Dorian').tonic().name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(6, 'Phrygian').tonic().name  ]  your_output = As  desired_output = As  (2/2)
      [  input = Key(6, 'Lydian').tonic().name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(6, 'Mixolydian').tonic().name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(6, 'Aeolian').tonic().name  ]  your_output = Ds  desired_output = Ds  (2/2)
      [  input = Key(6, 'Locrian').tonic().name  ]  your_output = Es  desired_output = Es  (2/2)
      [  input = Key(7, 'Major').tonic().name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(7, 'Minor').tonic().name  ]  your_output = As  desired_output = As  (2/2)
      [  input = Key(7, 'Ionian').tonic().name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(7, 'Dorian').tonic().name  ]  your_output = Ds  desired_output = Ds  (2/2)
      [  input = Key(7, 'Phrygian').tonic().name  ]  your_output = Es  desired_output = Es  (2/2)
      [  input = Key(7, 'Lydian').tonic().name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(7, 'Mixolydian').tonic().name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(7, 'Aeolian').tonic().name  ]  your_output = As  desired_output = As  (2/2)
      [  input = Key(7, 'Locrian').tonic().name  ]  your_output = Bs  desired_output = Bs  (2/2)
      [  input = Key(-7, 'Major').scale()[-1].name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-7, 'Minor').scale()[-1].name  ]  your_output = Gf  desired_output = Gf  (2/2)
      [  input = Key(-7, 'Ionian').scale()[-1].name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-7, 'Dorian').scale()[-1].name  ]  your_output = Cf  desired_output = Cf  (2/2)
      [  input = Key(-7, 'Phrygian').scale()[-1].name  ]  your_output = Df  desired_output = Df  (2/2)
      [  input = Key(-7, 'Lydian').scale()[-1].name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-7, 'Mixolydian').scale()[-1].name  ]  your_output = Ff  desired_output = Ff  (2/2)
      [  input = Key(-7, 'Aeolian').scale()[-1].name  ]  your_output = Gf  desired_output = Gf  (2/2)
      [  input = Key(-7, 'Locrian').scale()[-1].name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-6, 'Major').scale()[-1].name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-6, 'Minor').scale()[-1].name  ]  your_output = Df  desired_output = Df  (2/2)
      [  input = Key(-6, 'Ionian').scale()[-1].name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-6, 'Dorian').scale()[-1].name  ]  your_output = Gf  desired_output = Gf  (2/2)
      [  input = Key(-6, 'Phrygian').scale()[-1].name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-6, 'Lydian').scale()[-1].name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-6, 'Mixolydian').scale()[-1].name  ]  your_output = Cf  desired_output = Cf  (2/2)
      [  input = Key(-6, 'Aeolian').scale()[-1].name  ]  your_output = Df  desired_output = Df  (2/2)
      [  input = Key(-6, 'Locrian').scale()[-1].name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-5, 'Major').scale()[-1].name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-5, 'Minor').scale()[-1].name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-5, 'Ionian').scale()[-1].name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-5, 'Dorian').scale()[-1].name  ]  your_output = Df  desired_output = Df  (2/2)
      [  input = Key(-5, 'Phrygian').scale()[-1].name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-5, 'Lydian').scale()[-1].name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-5, 'Mixolydian').scale()[-1].name  ]  your_output = Gf  desired_output = Gf  (2/2)
      [  input = Key(-5, 'Aeolian').scale()[-1].name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-5, 'Locrian').scale()[-1].name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-4, 'Major').scale()[-1].name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(-4, 'Minor').scale()[-1].name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-4, 'Ionian').scale()[-1].name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(-4, 'Dorian').scale()[-1].name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-4, 'Phrygian').scale()[-1].name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-4, 'Lydian').scale()[-1].name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-4, 'Mixolydian').scale()[-1].name  ]  your_output = Df  desired_output = Df  (2/2)
      [  input = Key(-4, 'Aeolian').scale()[-1].name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-4, 'Locrian').scale()[-1].name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-3, 'Major').scale()[-1].name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(-3, 'Minor').scale()[-1].name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-3, 'Ionian').scale()[-1].name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(-3, 'Dorian').scale()[-1].name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-3, 'Phrygian').scale()[-1].name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-3, 'Lydian').scale()[-1].name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(-3, 'Mixolydian').scale()[-1].name  ]  your_output = Af  desired_output = Af  (2/2)
      [  input = Key(-3, 'Aeolian').scale()[-1].name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-3, 'Locrian').scale()[-1].name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-2, 'Major').scale()[-1].name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(-2, 'Minor').scale()[-1].name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-2, 'Ionian').scale()[-1].name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(-2, 'Dorian').scale()[-1].name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-2, 'Phrygian').scale()[-1].name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-2, 'Lydian').scale()[-1].name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(-2, 'Mixolydian').scale()[-1].name  ]  your_output = Ef  desired_output = Ef  (2/2)
      [  input = Key(-2, 'Aeolian').scale()[-1].name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-2, 'Locrian').scale()[-1].name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(-1, 'Major').scale()[-1].name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(-1, 'Minor').scale()[-1].name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-1, 'Ionian').scale()[-1].name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(-1, 'Dorian').scale()[-1].name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(-1, 'Phrygian').scale()[-1].name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(-1, 'Lydian').scale()[-1].name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(-1, 'Mixolydian').scale()[-1].name  ]  your_output = Bf  desired_output = Bf  (2/2)
      [  input = Key(-1, 'Aeolian').scale()[-1].name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(-1, 'Locrian').scale()[-1].name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(0, 'Major').scale()[-1].name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(0, 'Minor').scale()[-1].name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(0, 'Ionian').scale()[-1].name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(0, 'Dorian').scale()[-1].name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(0, 'Phrygian').scale()[-1].name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(0, 'Lydian').scale()[-1].name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(0, 'Mixolydian').scale()[-1].name  ]  your_output = F  desired_output = F  (2/2)
      [  input = Key(0, 'Aeolian').scale()[-1].name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(0, 'Locrian').scale()[-1].name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(1, 'Major').scale()[-1].name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(1, 'Minor').scale()[-1].name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(1, 'Ionian').scale()[-1].name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(1, 'Dorian').scale()[-1].name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(1, 'Phrygian').scale()[-1].name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(1, 'Lydian').scale()[-1].name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(1, 'Mixolydian').scale()[-1].name  ]  your_output = C  desired_output = C  (2/2)
      [  input = Key(1, 'Aeolian').scale()[-1].name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(1, 'Locrian').scale()[-1].name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(2, 'Major').scale()[-1].name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(2, 'Minor').scale()[-1].name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(2, 'Ionian').scale()[-1].name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(2, 'Dorian').scale()[-1].name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(2, 'Phrygian').scale()[-1].name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(2, 'Lydian').scale()[-1].name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(2, 'Mixolydian').scale()[-1].name  ]  your_output = G  desired_output = G  (2/2)
      [  input = Key(2, 'Aeolian').scale()[-1].name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(2, 'Locrian').scale()[-1].name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(3, 'Major').scale()[-1].name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(3, 'Minor').scale()[-1].name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(3, 'Ionian').scale()[-1].name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(3, 'Dorian').scale()[-1].name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(3, 'Phrygian').scale()[-1].name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(3, 'Lydian').scale()[-1].name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(3, 'Mixolydian').scale()[-1].name  ]  your_output = D  desired_output = D  (2/2)
      [  input = Key(3, 'Aeolian').scale()[-1].name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(3, 'Locrian').scale()[-1].name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(4, 'Major').scale()[-1].name  ]  your_output = Ds  desired_output = Ds  (2/2)
      [  input = Key(4, 'Minor').scale()[-1].name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(4, 'Ionian').scale()[-1].name  ]  your_output = Ds  desired_output = Ds  (2/2)
      [  input = Key(4, 'Dorian').scale()[-1].name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(4, 'Phrygian').scale()[-1].name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(4, 'Lydian').scale()[-1].name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(4, 'Mixolydian').scale()[-1].name  ]  your_output = A  desired_output = A  (2/2)
      [  input = Key(4, 'Aeolian').scale()[-1].name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(4, 'Locrian').scale()[-1].name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(5, 'Major').scale()[-1].name  ]  your_output = As  desired_output = As  (2/2)
      [  input = Key(5, 'Minor').scale()[-1].name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(5, 'Ionian').scale()[-1].name  ]  your_output = As  desired_output = As  (2/2)
      [  input = Key(5, 'Dorian').scale()[-1].name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(5, 'Phrygian').scale()[-1].name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(5, 'Lydian').scale()[-1].name  ]  your_output = Ds  desired_output = Ds  (2/2)
      [  input = Key(5, 'Mixolydian').scale()[-1].name  ]  your_output = E  desired_output = E  (2/2)
      [  input = Key(5, 'Aeolian').scale()[-1].name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(5, 'Locrian').scale()[-1].name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(6, 'Major').scale()[-1].name  ]  your_output = Es  desired_output = Es  (2/2)
      [  input = Key(6, 'Minor').scale()[-1].name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(6, 'Ionian').scale()[-1].name  ]  your_output = Es  desired_output = Es  (2/2)
      [  input = Key(6, 'Dorian').scale()[-1].name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(6, 'Phrygian').scale()[-1].name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(6, 'Lydian').scale()[-1].name  ]  your_output = As  desired_output = As  (2/2)
      [  input = Key(6, 'Mixolydian').scale()[-1].name  ]  your_output = B  desired_output = B  (2/2)
      [  input = Key(6, 'Aeolian').scale()[-1].name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(6, 'Locrian').scale()[-1].name  ]  your_output = Ds  desired_output = Ds  (2/2)
      [  input = Key(7, 'Major').scale()[-1].name  ]  your_output = Bs  desired_output = Bs  (2/2)
      [  input = Key(7, 'Minor').scale()[-1].name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(7, 'Ionian').scale()[-1].name  ]  your_output = Bs  desired_output = Bs  (2/2)
      [  input = Key(7, 'Dorian').scale()[-1].name  ]  your_output = Cs  desired_output = Cs  (2/2)
      [  input = Key(7, 'Phrygian').scale()[-1].name  ]  your_output = Ds  desired_output = Ds  (2/2)
      [  input = Key(7, 'Lydian').scale()[-1].name  ]  your_output = Es  desired_output = Es  (2/2)
      [  input = Key(7, 'Mixolydian').scale()[-1].name  ]  your_output = Fs  desired_output = Fs  (2/2)
      [  input = Key(7, 'Aeolian').scale()[-1].name  ]  your_output = Gs  desired_output = Gs  (2/2)
      [  input = Key(7, 'Locrian').scale()[-1].name  ]  your_output = As  desired_output = As  (2/2)
      [  input = Key(1.0, 'major')  ]  your_output = $exception$  desired_output = $exception$  (2/2)
      [  input = Key(0, .4)  ]  your_output = $exception$  desired_output = $exception$  (2/2)
      [  input = Key(-7, 'foo')  ]  your_output = $exception$  desired_output = $exception$  (2/2)
      [  input = Key(-7, '')  ]  your_output = $exception$  desired_output = $exception$  (2/2)
      [  input = Key(-8, 'lydian')  ]  your_output = $exception$  desired_output = $exception$  (2/2)
      [  input = Key(10, 'major')  ]  your_output = $exception$  desired_output = $exception$  (2/2)
      [  input = Key(0, ' major ')  ]  your_output = $exception$  desired_output = $exception$  (2/2)
Total raw score: (1206/1206)

----------------------
Base score (if you do nothing but just turn in the starter code): 6
Extra credit (if applicable): 0
Adjusted score (Final): 1200/1200

